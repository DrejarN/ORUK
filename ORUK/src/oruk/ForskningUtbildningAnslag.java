package oruk;


import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import oru.inf.InfException;

public class ForskningUtbildningAnslag extends javax.swing.JPanel {

    private static OrukDB db;
    private static ArrayList<String> enLista;
    private static String titel;

    

    /**
     * Creates new form ForskningUtbildning
     * @param db
     */
    public ForskningUtbildningAnslag(OrukDB db) {
        initComponents();
        this.db=db;
        enLista = new ArrayList<>(); 
        fyllLista();
        fyllLista2();
        kollaAdmin();
    }
    
    public void kollaAdmin() {
        try {
            String anvandare = Huvudfonster.getAnvandarnamn();
            btnAndra.setVisible(false);
            btnTaBort.setVisible(false);

            String data = "SELECT GRAD FROM ANVANDARE WHERE MAILADRESS='" + anvandare + "'";
            String data1 = db.fetchSingle(data);
            
            if(data1.equals("S") || data1.equals("A"))
            {
                btnAndra.setVisible(true);
                btnTaBort.setVisible(true);
                
            
            }
        
        } 
        catch (InfException ex) {

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelForskning = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        btnSe = new javax.swing.JButton();
        btnAndra = new javax.swing.JButton();
        btnTaBort = new javax.swing.JButton();
        cBoxKategori = new javax.swing.JComboBox<>();
        btnUppdatera = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        panelForskning.setBackground(new java.awt.Color(255, 255, 255));

        jList1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        btnSe.setText("Se inlägg");
        btnSe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeActionPerformed(evt);
            }
        });

        btnAndra.setText("Ändra inlägg");
        btnAndra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAndraActionPerformed(evt);
            }
        });

        btnTaBort.setText("Ta bort inlägg");
        btnTaBort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaBortActionPerformed(evt);
            }
        });

        cBoxKategori.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        cBoxKategori.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Forskning & Utbildning" }));
        cBoxKategori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cBoxKategoriActionPerformed(evt);
            }
        });

        btnUppdatera.setText("Uppdatera");
        btnUppdatera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUppdateraActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel1.setText("Sortera efter:");

        javax.swing.GroupLayout panelForskningLayout = new javax.swing.GroupLayout(panelForskning);
        panelForskning.setLayout(panelForskningLayout);
        panelForskningLayout.setHorizontalGroup(
            panelForskningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelForskningLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(panelForskningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1)
                    .addGroup(panelForskningLayout.createSequentialGroup()
                        .addComponent(cBoxKategori, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(btnUppdatera, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelForskningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAndra, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSe, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTaBort, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(132, Short.MAX_VALUE))
        );
        panelForskningLayout.setVerticalGroup(
            panelForskningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelForskningLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelForskningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cBoxKategori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUppdatera))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelForskningLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelForskningLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelForskningLayout.createSequentialGroup()
                        .addComponent(btnSe, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56)
                        .addComponent(btnAndra, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(52, 52, 52)
                        .addComponent(btnTaBort, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(81, 81, 81))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelForskning, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(panelForskning, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeActionPerformed
        new Forsk(db, titel).setVisible(true);     
    }//GEN-LAST:event_btnSeActionPerformed

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        // TODO add your handling code here:
        titel = jList1.getSelectedValue();
          
    }//GEN-LAST:event_jList1MouseClicked

    private void btnAndraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAndraActionPerformed
        new AdminAndraInlagg2(db, titel).setVisible(true);
    }//GEN-LAST:event_btnAndraActionPerformed

    private void btnTaBortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaBortActionPerformed
        int response = JOptionPane.showConfirmDialog(null, "Vill du ta bort inlägget?", "Ta bort inlägg",
        JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
     if (response == JOptionPane.NO_OPTION) {

    } else if (response == JOptionPane.YES_OPTION) {
            try {
                String data1 = "DELETE FROM GORA_INLAGG WHERE IID=(SELECT IID FROM INLAGG WHERE RUBRIK='" + titel + "')";
                String data2 = "DELETE FROM KOMMENTERA_INLAGG WHERE IID=(SELECT IID FROM INLAGG WHERE RUBRIK='" + titel + "')";
                String data3 = "DELETE FROM INLAGG WHERE IID=(SELECT IID FROM INLAGG WHERE RUBRIK='" + titel + "')";
                db.delete(data1);
                db.delete(data2);
                db.delete(data3);
                
                JOptionPane.showMessageDialog(null, "Inlägget har tagits bort");
                fyllLista();
                
                
            } catch (InfException ex) {
                
            }
        
      }
    }//GEN-LAST:event_btnTaBortActionPerformed

    private void btnUppdateraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUppdateraActionPerformed
        // TODO add your handling code here:
        
                DefaultListModel model = new DefaultListModel();
        model.removeAllElements();
        if (cBoxKategori.getSelectedItem().equals("Forskning & Utbildning")) {
            try {
                enLista = db.fetchColumn("SELECT RUBRIK FROM INLAGG WHERE KATEGORI='1' OR KATEGORI='2'");
                String svar = "";
                for (int i = 0; i < enLista.size(); i++) {
                    svar = enLista.get(i);
                    model.addElement(svar);
                }

                jList1.setModel(model);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }
        if (cBoxKategori.getSelectedItem().equals("Forskning")) {
            try {
                enLista = db.fetchColumn("SELECT RUBRIK FROM INLAGG WHERE KATEGORI='1'");
                String svar = "";
                for (int i = 0; i < enLista.size(); i++) {
                    svar = enLista.get(i);
                    model.addElement(svar);
                }

                jList1.setModel(model);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        } if(cBoxKategori.getSelectedItem().equals("Utbildning")) {
            try {
                enLista = db.fetchColumn("SELECT RUBRIK FROM INLAGG WHERE KATEGORI='2'");
                String svar = "";
                for (int i = 0; i < enLista.size(); i++) {
                    svar = enLista.get(i);
                    model.addElement(svar);
                }

                jList1.setModel(model);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
        }
    }//GEN-LAST:event_btnUppdateraActionPerformed

    private void cBoxKategoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cBoxKategoriActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cBoxKategoriActionPerformed
    
     public void fyllLista2() {
        try{
            ArrayList<String> lista = db.fetchColumn("SELECT NAMN FROM KATEGORI WHERE KID = '1' OR KID = '2'");
            for(int i = 0; i < lista.size(); i++){
                cBoxKategori.addItem(lista.get(i));
            }
        }
        catch(InfException e){
        }
    }
    
    public static void fyllLista() {
        DefaultListModel model = new DefaultListModel();
        try {
            enLista = db.fetchColumn("SELECT RUBRIK FROM INLAGG WHERE KATEGORI='1' OR KATEGORI='2'");
            String svar = "";
            for (int i = 0; i < enLista.size(); i++) {
                svar = enLista.get(i);
                model.addElement(svar);
            }
            
            jList1.setModel(model);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAndra;
    private javax.swing.JButton btnSe;
    private javax.swing.JButton btnTaBort;
    private javax.swing.JButton btnUppdatera;
    private javax.swing.JComboBox<String> cBoxKategori;
    private javax.swing.JLabel jLabel1;
    private static javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelForskning;
    // End of variables declaration//GEN-END:variables
}
